package TriTechLead;

import java.sql.*;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ruchira
 */

public class Leads extends javax.swing.JFrame {

    /**
     * Creates new form Leads
     */
    public Leads() {
        initComponents();
        leadList();
        updateButton.setEnabled(false);
    }

    //Database Connection
    DbConnection dbconnection = new DbConnection();
    Connection con = dbconnection.Connect();
    
    PreparedStatement pst;
    ResultSet rs;
    
    public void leadList()
    {
        int count;
        try {
            pst = con.prepareStatement("SELECT * FROM lead_table");
            rs = pst.executeQuery();
            ResultSetMetaData rsd = rs.getMetaData();
            count = rsd.getColumnCount();
            
            DefaultTableModel model = (DefaultTableModel)leadListTable.getModel();
            model.setRowCount(0);
            
            while(rs.next())
            {
                Vector v2 = new Vector();
                
                for (int i = 1; i <= count; i++) 
                {
                    v2.add(rs.getString("id"));
                    v2.add(rs.getString("leadName"));
                    v2.add(rs.getString("email"));
                    v2.add(rs.getString("contact"));
                    v2.add(rs.getString("status"));
                    
                }
                model.addRow(v2);
            }
            
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtLeadName = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtContact = new javax.swing.JTextField();
        txtStatus = new javax.swing.JComboBox<>();
        addButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        leadListTable = new javax.swing.JTable();
        convertedButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(211, 224, 234));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 600));

        jLabel2.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(22, 135, 167));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Tri Tech Lead Management System");

        jLabel1.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(39, 102, 120));
        jLabel1.setText("MANAGE LEADS");

        jLabel3.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel3.setText("Lead Name");

        jLabel4.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel4.setText("Email");

        jLabel5.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel5.setText("Contact");

        jLabel6.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel6.setText("Status");

        txtLeadName.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N

        txtEmail.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N

        txtContact.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N

        txtStatus.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        txtStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Interested", "Consideration", "Follow up", "Not Interested" }));
        txtStatus.setSelectedIndex(-1);

        addButton.setBackground(new java.awt.Color(39, 102, 120));
        addButton.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        addButton.setForeground(new java.awt.Color(255, 255, 255));
        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        updateButton.setBackground(new java.awt.Color(39, 102, 120));
        updateButton.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        updateButton.setForeground(new java.awt.Color(255, 255, 255));
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        backButton.setBackground(new java.awt.Color(39, 102, 120));
        backButton.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        backButton.setForeground(new java.awt.Color(211, 224, 234));
        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(255, 51, 51));
        deleteButton.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        leadListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Lead Name", "Email", "Contact", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        leadListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                leadListTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(leadListTable);
        if (leadListTable.getColumnModel().getColumnCount() > 0) {
            leadListTable.getColumnModel().getColumn(0).setPreferredWidth(40);
            leadListTable.getColumnModel().getColumn(0).setMaxWidth(40);
            leadListTable.getColumnModel().getColumn(3).setPreferredWidth(50);
            leadListTable.getColumnModel().getColumn(4).setPreferredWidth(50);
        }

        convertedButton.setBackground(new java.awt.Color(0, 153, 0));
        convertedButton.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        convertedButton.setForeground(new java.awt.Color(255, 255, 255));
        convertedButton.setText("Converted");
        convertedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertedButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(convertedButton)
                        .addGap(18, 18, 18)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtLeadName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtContact, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtStatus, javax.swing.GroupLayout.Alignment.LEADING, 0, 199, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(backButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(94, 94, 94))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backButton)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLeadName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addButton)
                            .addComponent(updateButton))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(convertedButton)
                            .addComponent(deleteButton))
                        .addGap(45, 45, 45))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 796, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        
        String leadName = txtLeadName.getText();
        String email = txtEmail.getText();
        String contact = txtContact.getText();
        String status = txtStatus.getSelectedItem().toString();
        
        
        try {
            pst = con.prepareStatement("INSERT INTO lead_table(leadName,contact,email,status) VALUES(?,?,?,?)");
            pst.setString(1, leadName);
            pst.setString(2, contact);
            pst.setString(3, email);
            pst.setString(4, status);
            int result = pst.executeUpdate();
            
            if(result == 1)
            {
                JOptionPane.showMessageDialog(this, "Lead Added Successfully");
                txtLeadName.setText("");
                txtContact.setText("");
                txtEmail.setText("");
                txtStatus.setSelectedIndex(-1);
                txtLeadName.requestFocus();
                leadList();
                updateButton.setEnabled(false);
            
            }
            else
            {
            JOptionPane.showMessageDialog(this, "Whoops! An error occurred!");
            }
            
            
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void convertedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertedButtonActionPerformed
            
        DefaultTableModel d1 = (DefaultTableModel)leadListTable.getModel();
        int selectIndex = leadListTable.getSelectedRow();
        
        int id = Integer.parseInt(d1.getValueAt(selectIndex, 0).toString());
        
        
        String leadName = txtLeadName.getText();
        String email = txtEmail.getText();
        String contact = txtContact.getText();
        String status = txtStatus.getSelectedItem().toString();
        
        
        try {
            pst = con.prepareStatement("INSERT INTO customer_table(customerName,contact,email) VALUES(?,?,?)");
            pst.setString(1, leadName);
            pst.setString(2, contact);
            pst.setString(3, email);
            int result = pst.executeUpdate();
            
            pst = con.prepareStatement("DELETE FROM lead_table WHERE id = ?");
            pst.setInt(1, id);
            int result2 = pst.executeUpdate();

            if(result == 1 & result2 ==1 )
            {
                JOptionPane.showMessageDialog(this, "Lead Added to Customers Successfully");
                txtLeadName.setText("");
                txtContact.setText("");
                txtEmail.setText("");
                txtStatus.setSelectedIndex(-1);
                txtLeadName.requestFocus();
                leadList();
                addButton.setEnabled(true);
                updateButton.setEnabled(false);
            
            }
            else
            {
            JOptionPane.showMessageDialog(this, "Whoops! An error occurred!");
            }

        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }

    }//GEN-LAST:event_convertedButtonActionPerformed

    private void leadListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_leadListTableMouseClicked
      
        DefaultTableModel d1 = (DefaultTableModel)leadListTable.getModel();
        int selectIndex = leadListTable.getSelectedRow();
        
        int id = Integer.parseInt(d1.getValueAt(selectIndex, 0).toString());
        txtLeadName.setText(d1.getValueAt(selectIndex, 1).toString());
        txtEmail.setText(d1.getValueAt(selectIndex, 2).toString());
        txtContact.setText(d1.getValueAt(selectIndex, 3).toString());
        txtStatus.setSelectedItem(d1.getValueAt(selectIndex, 4).toString());
        updateButton.setEnabled(true);
        addButton.setEnabled(false);
    }//GEN-LAST:event_leadListTableMouseClicked

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
    
        DefaultTableModel d1 = (DefaultTableModel)leadListTable.getModel();
        int selectIndex = leadListTable.getSelectedRow();
        
        int id = Integer.parseInt(d1.getValueAt(selectIndex, 0).toString());
        
        
        String leadName = txtLeadName.getText();
        String email = txtEmail.getText();
        String contact = txtContact.getText();
        String status = txtStatus.getSelectedItem().toString();
        
        
        try {
            pst = con.prepareStatement("UPDATE lead_table SET leadName = ?, contact = ?, email = ?, status = ? WHERE id = ?");
            pst.setString(1, leadName);
            pst.setString(2, contact);
            pst.setString(3, email);
            pst.setString(4, status);
            pst.setInt(5, id);
            int result = pst.executeUpdate();
            
            if(result == 1)
            {
                JOptionPane.showMessageDialog(this, "Lead Updated Successfully");
                txtLeadName.setText("");
                txtContact.setText("");
                txtEmail.setText("");
                txtStatus.setSelectedIndex(-1);
                txtLeadName.requestFocus();
                leadList();
                addButton.setEnabled(true);
                updateButton.setEnabled(false);
            
            }
            else
            {
            JOptionPane.showMessageDialog(this, "Whoops! An error occurred!");
            }

        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed

        DefaultTableModel d1 = (DefaultTableModel)leadListTable.getModel();
        int selectIndex = leadListTable.getSelectedRow();
        
        int id = Integer.parseInt(d1.getValueAt(selectIndex, 0).toString());
        
        try {
            pst = con.prepareStatement("DELETE FROM lead_table WHERE id = ?");
            pst.setInt(1, id);
            int result = pst.executeUpdate();
            
            if(result == 1)
            {
                JOptionPane.showMessageDialog(this, "Lead Deleted Successfully");
                txtLeadName.setText("");
                txtContact.setText("");
                txtEmail.setText("");
                txtStatus.setSelectedIndex(-1);
                txtLeadName.requestFocus();
                leadList();
                addButton.setEnabled(true);
                updateButton.setEnabled(false);
            
            }
            else
            {
            JOptionPane.showMessageDialog(this, "Whoops! An error occurred!");
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed

        this.setVisible(false);
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Leads.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Leads.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Leads.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Leads.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Leads().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton backButton;
    private javax.swing.JButton convertedButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable leadListTable;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtLeadName;
    private javax.swing.JComboBox<String> txtStatus;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
